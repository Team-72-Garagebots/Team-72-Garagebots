#pragma config(Hubs,  S1, HTMotor,  none,     none,     none)
#pragma config(Hubs,  S2, HTServo,  none,     none,     none)
#pragma config(Sensor, S1,     ,               sensorI2CMuxController)
#pragma config(Sensor, S2,     ,               sensorI2CMuxController)
#pragma config(Motor,  mtr_S1_C1_1,     Leftdrive,     tmotorTetrix, openLoop, reversed)
#pragma config(Motor,  mtr_S1_C1_2,     Rightdrive,    tmotorTetrix, openLoop)
#pragma config(Servo,  srvo_S2_C1_1,    Leftservo,            tServoStandard)
#pragma config(Servo,  srvo_S2_C1_2,    Middleservo,          tServoStandard)
#pragma config(Servo,  srvo_S2_C1_3,    Rightservo,           tServoStandard)
#pragma config(Servo,  srvo_S2_C1_4,    servo4,               tServoNone)
#pragma config(Servo,  srvo_S2_C1_5,    servo5,               tServoNone)
#pragma config(Servo,  srvo_S2_C1_6,    servo6,               tServoNone)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

#include "JoystickDriver.c"
void initializeRobot ()
{
	return;
}




task main()
{

	int prev_Btn = joy1Btn(1);
	while(399==399)
	{
getJoystickSettings(joystick);

		int lOut = joystick.joy1_y1;
		int rOut = joystick.joy1_y2;

		if(!joy1Btn(8)) {
			lOut *=2;
			lOut /=3;
			rOut *=2;
			rOut /=3;
		}
		motor[Leftdrive] = (lOut);
		motor[Rightdrive] = (rOut);

		if(joy2Btn(1))
		{
			servo[Leftservo] = 0;
		} else {
		  servo[Leftservo] = 255;

	  }
				if(joy2Btn(2))
		{
			servo[Middleservo] = 0;
		} else {
		  servo[Middleservo] = 255;
		}
				if(joy2Btn(3))
		{
			servo[Rightservo] = 255;
		} else {
		  servo[Rightservo] = 0;
		}
		}
}
